//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimProfileServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSimProfileByIdContract", Namespace="http://teleena.com/2015/10/Provisioning/SimProfileService")]
    public partial class GetSimProfileByIdContract : object
    {
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimProfileContract", Namespace="http://teleena.com/2015/10/Provisioning/SimProfileService")]
    public partial class SimProfileContract : object
    {
        
        private System.DateTime EffectiveFromField;
        
        private int IdField;
        
        private string ManufacturerField;
        
        private string NameField;
        
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveFrom
        {
            get
            {
                return this.EffectiveFromField;
            }
            set
            {
                this.EffectiveFromField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer
        {
            get
            {
                return this.ManufacturerField;
            }
            set
            {
                this.ManufacturerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes
        {
            get
            {
                return this.NotesField;
            }
            set
            {
                this.NotesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateSimProfilesContract", Namespace="http://teleena.com/2015/10/Provisioning/SimProfileService")]
    public partial class ValidateSimProfilesContract : object
    {
        
        private int[] SimProfileIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SimProfileIds
        {
            get
            {
                return this.SimProfileIdsField;
            }
            set
            {
                this.SimProfileIdsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimProfilesValidationContract", Namespace="http://teleena.com/2015/10/Provisioning/SimProfileService")]
    public partial class SimProfilesValidationContract : object
    {
        
        private bool AreSimProfilesValidField;
        
        private int[] InvalidSimProfileIdsField;
        
        private string[] ValidationErrorMessagesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AreSimProfilesValid
        {
            get
            {
                return this.AreSimProfilesValidField;
            }
            set
            {
                this.AreSimProfilesValidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] InvalidSimProfileIds
        {
            get
            {
                return this.InvalidSimProfileIdsField;
            }
            set
            {
                this.InvalidSimProfileIdsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ValidationErrorMessages
        {
            get
            {
                return this.ValidationErrorMessagesField;
            }
            set
            {
                this.ValidationErrorMessagesField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://teleena.com/2015/10/Provisioning/SimProfileService", ConfigurationName="SimProfileServiceReference.SimProfileService")]
    public interface SimProfileService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://teleena.com/2015/10/Provisioning/SimProfileService/SimProfileService/GetSi" +
            "mProfile", ReplyAction="http://teleena.com/2015/10/Provisioning/SimProfileService/SimProfileService/GetSi" +
            "mProfileResponse")]
        System.Threading.Tasks.Task<SimProfileServiceReference.SimProfileContract> GetSimProfileAsync(SimProfileServiceReference.GetSimProfileByIdContract request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://teleena.com/2015/10/Provisioning/SimProfileService/SimProfileService/Valid" +
            "ateSimProfiles", ReplyAction="http://teleena.com/2015/10/Provisioning/SimProfileService/SimProfileService/Valid" +
            "ateSimProfilesResponse")]
        System.Threading.Tasks.Task<SimProfileServiceReference.SimProfilesValidationContract> ValidateSimProfilesAsync(SimProfileServiceReference.ValidateSimProfilesContract request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface SimProfileServiceChannel : SimProfileServiceReference.SimProfileService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class SimProfileServiceClient : System.ServiceModel.ClientBase<SimProfileServiceReference.SimProfileService>, SimProfileServiceReference.SimProfileService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SimProfileServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(SimProfileServiceClient.GetBindingForEndpoint(endpointConfiguration), SimProfileServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SimProfileServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SimProfileServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SimProfileServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SimProfileServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SimProfileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<SimProfileServiceReference.SimProfileContract> GetSimProfileAsync(SimProfileServiceReference.GetSimProfileByIdContract request)
        {
            return base.Channel.GetSimProfileAsync(request);
        }
        
        public System.Threading.Tasks.Task<SimProfileServiceReference.SimProfilesValidationContract> ValidateSimProfilesAsync(SimProfileServiceReference.ValidateSimProfilesContract request)
        {
            return base.Channel.ValidateSimProfilesAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_SimProfileService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_SimProfileService))
            {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Mode = System.ServiceModel.SecurityMode.None;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_SimProfileService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/ProvisioningWcf/SimProfileService.svc/http");
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_SimProfileService))
            {
                return new System.ServiceModel.EndpointAddress("net.tcp://mdmitrovic.levi9.com/ProvisioningWcf/SimProfileService.svc/tcp");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_SimProfileService,
            
            NetTcpBinding_SimProfileService,
        }
    }
}
